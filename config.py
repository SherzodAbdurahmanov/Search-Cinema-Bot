import requests
import os
import telebot
from dotenv import load_dotenv
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

if not load_dotenv():
    print('–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Ç.–∫ –æ—Ç—Å—É—Ç–≤—É–µ—Ç —Ñ–∞–π–¥ .env !')
else:
    load_dotenv()

API_KEY = os.getenv("API_KEY")
BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = telebot.TeleBot(BOT_TOKEN)


def gen_markup() -> ReplyKeyboardMarkup:
    # –§—É–Ω–∫—Ü–∏—è , —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫.
    btn_1 = KeyboardButton(text='–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é')
    btn_2 = KeyboardButton(text='–ü–æ–∏—Å–∫ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É')
    btn_3 = KeyboardButton(text='–° –Ω–∏–∑–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º')
    btn_4 = KeyboardButton(text='–° –≤—ã—Å–æ–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º')
    btn_5 = KeyboardButton(text='–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤')

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(btn_1, btn_2, btn_3, btn_4, btn_5)
    return keyboard


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.send_message(message.from_user.id,
                     '–ü—Ä–∏–≤–µ—Ç ‚úã\n–Ø –±–æ—Ç ü§ñ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º—ã/—Å–µ—Ä–∏–∞–ª—ã:\n'
                     '–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é:\n–ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É:\n–° –Ω–∏–∑–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º:\n–° –≤—ã—Å–æ–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º:\n'
                     '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –Ω–∏–∂–µ üëáüëáüëá', reply_markup=gen_markup())


@bot.message_handler(func=lambda message: message.text == '–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é')
# """ –§—É–Ω–∫—Ü–∏—è , –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é."""
def movie_search(message):
    base_url = 'https://api.kinopoisk.dev/v1.4/movie/search?'
    params = {
        'page': 1,
        'limit': 10,
        'query': "–†–∞–π –ø–æ–¥ –Ω–æ–≥–∞–º–∏ –º–∞—Ç–µ—Ä–µ–π"
    }
    headers = {'X-API-KEY': API_KEY}
    resource = 'v1.4/movie'
    response = requests.get(f"{base_url}{resource}", headers=headers, params=params)
    data = response.json()
    bot.reply_to(message, f"–ù–ê–ó–í–ê–ù–ò–ï: {data['docs'][0]['name']}\n"
                          f"–†–ï–ô–¢–ò–ù–ì: {data['docs'][0]['rating']['kp']}\n"
                          f"–ì–û–î: {data['docs'][0]['year']}\n"
                          f"–ñ–ê–ù–†: {data['docs'][0]['genres'][0]['name']}\n"
                          f"–í–û–ó–†–ê–°–¢–ù–û–ô –†–ï–ô–¢–ò–ù–ì: {data['docs'][0]['ageRating']}\n"
                          f"–û–ü–ò–°–ê–ù–ò–ï: {data['docs'][0]['description']}\n"
                          f"–ü–û–°–¢–ï–†: {data['docs'][0]['poster']['previewUrl']} ")


@bot.message_handler(commands=['movie_by_rating'])
# """ –§—É–Ω–∫—Ü–∏—è , –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É."""
def movie_by_rating(message):
    bot.reply_to(message, '–ü—Ä–æ—Å—Ç–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—è –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞ ((')
    pass


@bot.message_handler(commands=['low_budget_movie'])
# """ –§—É–Ω–∫—Ü–∏—è , –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤/—Å–µ—Ä–∏–∞–ª–æ–≤ —Å –Ω–∏–∑–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º. """
def low_budget_movie(message):
    bot.reply_to(message, '–ü—Ä–æ—Å—Ç–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—è –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞ ((')
    pass


@bot.message_handler(commands=['high_budget_movie'])
# """ –§—É–Ω–∫—Ü–∏—è , –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤/—Å–µ—Ä–∏–∞–ª–æ–≤ —Å –≤—ã—Å–æ–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º. """
def high_budget_movie(message):
    bot.reply_to(message, '–ü—Ä–æ—Å—Ç–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—è –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞ ((')
    pass


@bot.message_handler(commands=['history'])
# """ –§—É–Ω–∫—Ü–∏—è ,–¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞"""
def history(message):
    bot.reply_to(message, '–ü—Ä–æ—Å—Ç–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—è –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞ ((')
    pass


@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.reply_to(message, '–û–¥–∏–ª—å–±–µ–∫ –∏–¥–∏ –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞–π –∑–∞—á–µ–º —Ç–µ–±–µ —ç—Ç–æ ?.')


if __name__ == '__main__':
    bot.infinity_polling()
